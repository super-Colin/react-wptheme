
// Kept global for breakpoint mixin
$breakpoints:(
    'for-tablet':600px,
    'for-tabletLandscape':900px,
    'for-desktop':1180px,
    'for-desktop4k':1760px
);

// sGrid breakpoints
$grid-breakpoints: (
    'xs': 0,
    'tablet': map-get($breakpoints, 'for-tablet'),
    'tabletLandscape': map-get($breakpoints, 'for-tabletLandscape'),
    'desktop': map-get($breakpoints, 'for-desktop'),
    'desktop4k': map-get($breakpoints, 'for-desktop4k')
) !default;
// $grid-breakpoints: (
//     xs: 0,
//     sm: 576px,
//     md: 768px,
//     lg: 992px,
//     xl: 1200px
// ) !default;




$global_deep-map: deep-map-merge(
    (
        'breakpoint': $breakpoints
    ),
    $global_deep-map,
    true
);



// Turn media queries into mixins based on these ^ variables https://www.sitepoint.com/managing-responsive-breakpoints-sass/
@mixin breakpoint($breakpoint){
    $value: map-get( $breakpoints, $breakpoint);
    @if $value != null{
        @media(min-width: $value){
            @content;
        }
    }
    @else{
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
    }
}

@function new-breakpoint($breakpointName, $breakpointValue){
    $newBreakpoint: ($breakpointName : $breakpointValue);
    $breakpoints: map-merge($newBreakpoint, $breakpoints);
    @return $breakpoints;
}
// @debug new-breakpoint('for-something', 600px);

// used like so
// .ZrandomComponent{
//     width: auto;
//     @include breakpoint('for-tablet'){width:50%;}
//     @include breakpoint('for-tabletLandscape'){width:75%;}
//     @include breakpoint('for-desktop'){width:100%;}
// }


// sget('breakpoint.for-tablet')
//@include breakpoint('for-tablet'){ ...

