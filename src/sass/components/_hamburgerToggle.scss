@use "sass:math";
/*

Containing element must have a defined width so that this icon can create a square ratio based on width.

<div class="hamburgerMenu">
    <span class="hamburgerMenu_middleLine"></span>
</div>

Add to wrapping element that should toggle the icon display:
onclick="this.classList.toggle('hamburgerToggle-active')"

*/

$hamburgertoggle_mindiameter: 20px;
$hamburgertoggle_maxdiameter: 40px;
$hamburgertoggle_linethickness: 5px;

.hamburgerToggle{
    // --hamburgertoggle_mindiameter: 20px;
    // --hamburgertoggle_maxdiameter: 40px;
    // --hamburgertoggle_linethickness: 5px;

    position: relative;

    height: 0;
    width: 100%;
    padding-top:100%;
}
.hamburgerToggle::before,
.hamburgerToggle_middleLine,
.hamburgerToggle::after{
    content:'';
    display:block;

    position: absolute;
    top: 0;
    left: 0;

    min-height: 2px;
    height: $hamburgertoggle_linethickness;
    width: 100%;

    // background-color: var(--global_color-black1);
    background-color: sget('color.black');
    border-radius: calc(math.div(#{$hamburgertoggle_linethickness}, 2));
    transform-origin: center;
    transition: 
        top sget('timing.transition.duration.medium'),
        bottom sget('timing.transition.duration.medium'),
        left sget('timing.transition.duration.medium'),
        right sget('timing.transition.duration.medium'),
        transform sget('timing.transition.duration.medium'),
        width sget('timing.transition.duration.medium'),
        border-radius sget('timing.transition.duration.medium');
}
// .hamburgerToggle::before{}
.hamburgerToggle_middleLine{
    top: calc(50% - math.div(#{$hamburgertoggle_linethickness}, 2));
    right:0;
}
.hamburgerToggle::after{
    top: unset;
    bottom: 0;
}

.hamburgerToggle-active .hamburgerToggle::before{
    width: 110%;
    top: calc(50% - math.div(#{$hamburgertoggle_linethickness} , 2) );
    transform: rotate(45deg);
}
.hamburgerToggle-active .hamburgerToggle_middleLine {
    width: 0;
    left: 50%;
    right: 50%;
    border-radius: 50%;
}
.hamburgerToggle-active .hamburgerToggle::after {
    width: 110%;
    top: unset;
    bottom: calc(50% - math.div(#{$hamburgertoggle_linethickness} , 2));
    transform: rotate(-45deg);
}

@media(min-width: 600px){
    .hamburgerToggle {
        // --hamburgertoggle_mindiameter: 30px;
        // --hamburgertoggle_maxdiameter: 60px;
        // --hamburgertoggle_linethickness: 5px;
    }
}
